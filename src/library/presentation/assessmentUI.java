/*
 * @author Mark Barone
 */
package library.presentation;

import java.awt.Color;
import java.awt.Window;
import javax.swing.JList;
import javax.swing.JOptionPane;
import library.domain.Student;
import javax.swing.tree.*;
import library.domain.Node;
import library.domain.Progression;
import java.util.ArrayList;
import javax.swing.UIManager;
import library.domain.Grade;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.util.Iterator;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
import library.business.DefaultListModelMgr;
import library.business.DefaultTreeModelMgr;
import library.business.GradeMgr;
import library.business.ProgressionMgr;
import library.business.ReportMgr;
import library.domain.Report;

public class assessmentUI extends javax.swing.JFrame {
    private Node curObj;
    private Student curStu;
    private String fDate;
    private String semester;
    private String searchSem;
    private final LocalDate date = LocalDate.now();
    
    public assessmentUI() {
        UIManager.put("Tree.rendererFillBackground", false);
        initComponents();
        getCurDate();
        getSemester();
        loadStudents();
        jTree1.getSelectionModel().setSelectionMode
                                    (TreeSelectionModel.SINGLE_TREE_SELECTION);
        loadDomains();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        domainPanel = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentList = new javax.swing.JList<>();
        gradesPanel = new javax.swing.JPanel();
        nameLbl = new javax.swing.JLabel();
        stuLbl = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        dLbl = new javax.swing.JLabel();
        dateLbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        objLbl = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        gradeField = new javax.swing.JTextField();
        submitBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        notesField = new javax.swing.JTextArea();
        cCountLbl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        belowStdBtn = new javax.swing.JButton();
        aboveStdBtn = new javax.swing.JButton();
        allStdBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        semesterCombo = new javax.swing.JComboBox<>();
        prevGrade = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        p7 = new javax.swing.JLabel();
        p13 = new javax.swing.JLabel();
        p3 = new javax.swing.JLabel();
        p9 = new javax.swing.JLabel();
        p4 = new javax.swing.JLabel();
        p1 = new javax.swing.JLabel();
        p2 = new javax.swing.JLabel();
        p12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        p5 = new javax.swing.JLabel();
        p6 = new javax.swing.JLabel();
        p8 = new javax.swing.JLabel();
        p10 = new javax.swing.JLabel();
        p11 = new javax.swing.JLabel();
        progressionPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pane1 = new javax.swing.JEditorPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        pane2 = new javax.swing.JEditorPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        pane3 = new javax.swing.JEditorPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        pane4 = new javax.swing.JEditorPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        pane5 = new javax.swing.JEditorPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        pane6 = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(223, 223, 204));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1699, 1400));
        setMaximumSize(new java.awt.Dimension(1699, 1900));
        setMinimumSize(new java.awt.Dimension(1699, 600));

        domainPanel.setBackground(new java.awt.Color(240, 240, 239));

        jTree1.setBackground(new java.awt.Color(209, 209, 194));
        jTree1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane11.setViewportView(jTree1);

        jLabel1.setBackground(new java.awt.Color(209, 209, 194));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel1.setText("Students:");
        jLabel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jLabel1.setOpaque(true);

        jScrollPane1.setBackground(new java.awt.Color(191, 191, 191));

        studentList.setBackground(new java.awt.Color(209, 209, 194));
        studentList.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        studentList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        studentList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        studentList.setSelectionBackground(new java.awt.Color(255, 255, 255));
        studentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                studentListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(studentList);

        gradesPanel.setBackground(new java.awt.Color(209, 209, 194));
        gradesPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        gradesPanel.setFocusable(false);
        gradesPanel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        gradesPanel.setPreferredSize(new java.awt.Dimension(1000, 744));
        gradesPanel.setLayout(new java.awt.GridBagLayout());

        nameLbl.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        nameLbl.setText("Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 63;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 26, 0, 0);
        gradesPanel.add(nameLbl, gridBagConstraints);

        stuLbl.setText("Select Student");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 186;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 12, 0, 0);
        gradesPanel.add(stuLbl, gridBagConstraints);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 23;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 483;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 12, 5, 0);
        gradesPanel.add(jSeparator1, gridBagConstraints);

        dLbl.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        dLbl.setText("Date:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 173;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 26, 0, 0);
        gradesPanel.add(dLbl, gridBagConstraints);

        dateLbl.setText("todays date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.ipadx = 214;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 12, 0, 0);
        gradesPanel.add(dateLbl, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel5.setText("Objective:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(63, 26, 0, 0);
        gradesPanel.add(jLabel5, gridBagConstraints);

        objLbl.setText("Select Objective");
        objLbl.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 161;
        gridBagConstraints.ipady = 47;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 12, 0, 0);
        gradesPanel.add(objLbl, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel9.setText("Progression:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 26, 0, 0);
        gradesPanel.add(jLabel9, gridBagConstraints);

        gradeField.setBackground(new java.awt.Color(251, 250, 250));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 51;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        gradesPanel.add(gradeField, gridBagConstraints);

        submitBtn.setBackground(new java.awt.Color(251, 250, 250));
        submitBtn.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 21;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 123, 0, 0);
        gradesPanel.add(submitBtn, gridBagConstraints);

        clearBtn.setBackground(new java.awt.Color(251, 250, 250));
        clearBtn.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 21;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        gradesPanel.add(clearBtn, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel10.setText("Notes:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 26, 0, 0);
        gradesPanel.add(jLabel10, gridBagConstraints);

        notesField.setBackground(new java.awt.Color(251, 250, 250));
        notesField.setColumns(20);
        notesField.setFont(new java.awt.Font("Monospaced", 0, 21)); // NOI18N
        notesField.setRows(5);
        notesField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                notesFieldKeyTyped(evt);
            }
        });
        jScrollPane8.setViewportView(notesField);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 272;
        gridBagConstraints.ipady = 62;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        gradesPanel.add(jScrollPane8, gridBagConstraints);

        cCountLbl.setFont(new java.awt.Font("Tahoma", 2, 20)); // NOI18N
        cCountLbl.setText("0/120 characters");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.ipadx = 54;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 53, 0, 0);
        gradesPanel.add(cCountLbl, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel2.setText("Enter Student Checkpoint:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 94;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 143, 0, 0);
        gradesPanel.add(jLabel2, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel6.setText("      Reports:");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 21;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 68;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 49, 0, 26);
        gradesPanel.add(jLabel6, gridBagConstraints);

        belowStdBtn.setBackground(new java.awt.Color(251, 250, 250));
        belowStdBtn.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        belowStdBtn.setText("Below Standard");
        belowStdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                belowStdBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 21;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 49, 0, 26);
        gradesPanel.add(belowStdBtn, gridBagConstraints);

        aboveStdBtn.setBackground(new java.awt.Color(251, 250, 250));
        aboveStdBtn.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        aboveStdBtn.setText("Above Standard");
        aboveStdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboveStdBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 21;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 49, 0, 26);
        gradesPanel.add(aboveStdBtn, gridBagConstraints);

        allStdBtn.setBackground(new java.awt.Color(251, 250, 250));
        allStdBtn.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        allStdBtn.setText("All Grades");
        allStdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStdBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 21;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(37, 49, 0, 26);
        gradesPanel.add(allStdBtn, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel7.setText("Choose Semester:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 21;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(68, 49, 0, 26);
        gradesPanel.add(jLabel7, gridBagConstraints);

        semesterCombo.setBackground(new java.awt.Color(251, 250, 250));
        semesterCombo.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        semesterCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fall", "Winter", "Spring" }));
        semesterCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semesterComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 21;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 101;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 49, 0, 26);
        gradesPanel.add(semesterCombo, gridBagConstraints);

        prevGrade.setBackground(new java.awt.Color(251, 250, 250));
        prevGrade.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        prevGrade.setText("Previous Grades");
        prevGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevGradeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 21;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 66, 0, 0);
        gradesPanel.add(prevGrade, gridBagConstraints);

        p7.setBackground(new java.awt.Color(127, 154, 71));
        p7.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p7.setForeground(new java.awt.Color(223, 223, 204));
        p7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p7.setText("7");
        p7.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p7.setOpaque(true);
        p7.setPreferredSize(new java.awt.Dimension(40, 30));
        p7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p7MouseClicked(evt);
            }
        });

        p13.setBackground(new java.awt.Color(127, 154, 71));
        p13.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p13.setForeground(new java.awt.Color(223, 223, 204));
        p13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p13.setText("13");
        p13.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p13.setOpaque(true);
        p13.setPreferredSize(new java.awt.Dimension(40, 30));
        p13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p13MouseClicked(evt);
            }
        });

        p3.setBackground(new java.awt.Color(127, 154, 71));
        p3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p3.setForeground(new java.awt.Color(223, 223, 204));
        p3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p3.setText("3");
        p3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p3.setOpaque(true);
        p3.setPreferredSize(new java.awt.Dimension(40, 30));
        p3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p3MouseClicked(evt);
            }
        });

        p9.setBackground(new java.awt.Color(127, 154, 71));
        p9.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p9.setForeground(new java.awt.Color(223, 223, 204));
        p9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p9.setText("9");
        p9.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p9.setOpaque(true);
        p9.setPreferredSize(new java.awt.Dimension(40, 30));
        p9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p9MouseClicked(evt);
            }
        });

        p4.setBackground(new java.awt.Color(127, 154, 71));
        p4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p4.setForeground(new java.awt.Color(223, 223, 204));
        p4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p4.setText("4");
        p4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p4.setOpaque(true);
        p4.setPreferredSize(new java.awt.Dimension(40, 30));
        p4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p4MouseClicked(evt);
            }
        });

        p1.setBackground(new java.awt.Color(127, 154, 71));
        p1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p1.setForeground(new java.awt.Color(223, 223, 204));
        p1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p1.setText("1");
        p1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p1.setOpaque(true);
        p1.setPreferredSize(new java.awt.Dimension(40, 30));
        p1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p1MouseClicked(evt);
            }
        });

        p2.setBackground(new java.awt.Color(127, 154, 71));
        p2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p2.setForeground(new java.awt.Color(223, 223, 204));
        p2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p2.setText(" 2");
        p2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        p2.setOpaque(true);
        p2.setPreferredSize(new java.awt.Dimension(40, 30));
        p2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p2MouseClicked(evt);
            }
        });

        p12.setBackground(new java.awt.Color(127, 154, 71));
        p12.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p12.setForeground(new java.awt.Color(223, 223, 204));
        p12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p12.setText("12");
        p12.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p12.setOpaque(true);
        p12.setPreferredSize(new java.awt.Dimension(40, 30));
        p12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p12MouseClicked(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(240, 240, 239));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(127, 154, 71));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Progression Scale");
        jLabel4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jLabel4.setOpaque(true);

        p5.setBackground(new java.awt.Color(127, 154, 71));
        p5.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p5.setForeground(new java.awt.Color(223, 223, 204));
        p5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p5.setText("5");
        p5.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p5.setOpaque(true);
        p5.setPreferredSize(new java.awt.Dimension(40, 30));
        p5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p5MouseClicked(evt);
            }
        });

        p6.setBackground(new java.awt.Color(127, 154, 71));
        p6.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p6.setForeground(new java.awt.Color(223, 223, 204));
        p6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p6.setText("6");
        p6.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p6.setOpaque(true);
        p6.setPreferredSize(new java.awt.Dimension(40, 30));
        p6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p6MouseClicked(evt);
            }
        });

        p8.setBackground(new java.awt.Color(127, 154, 71));
        p8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p8.setForeground(new java.awt.Color(223, 223, 204));
        p8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p8.setText("8");
        p8.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p8.setOpaque(true);
        p8.setPreferredSize(new java.awt.Dimension(40, 30));
        p8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p8MouseClicked(evt);
            }
        });

        p10.setBackground(new java.awt.Color(127, 154, 71));
        p10.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p10.setForeground(new java.awt.Color(223, 223, 204));
        p10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p10.setText("10");
        p10.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p10.setOpaque(true);
        p10.setPreferredSize(new java.awt.Dimension(40, 30));
        p10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p10MouseClicked(evt);
            }
        });

        p11.setBackground(new java.awt.Color(127, 154, 71));
        p11.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        p11.setForeground(new java.awt.Color(223, 223, 204));
        p11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p11.setText("11");
        p11.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        p11.setOpaque(true);
        p11.setPreferredSize(new java.awt.Dimension(40, 30));
        p11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(p1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(89, 89, 89)
                .addComponent(p2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(91, 91, 91)
                .addComponent(p3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(97, 97, 97)
                .addComponent(p4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(94, 94, 94)
                .addComponent(p5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(103, 103, 103)
                .addComponent(p6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(94, 94, 94)
                .addComponent(p7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(108, 108, 108)
                .addComponent(p8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(87, 87, 87)
                .addComponent(p9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(104, 104, 104)
                .addComponent(p10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(87, 87, 87)
                .addComponent(p11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(93, 93, 93)
                .addComponent(p12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(91, 91, 91)
                .addComponent(p13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout domainPanelLayout = new javax.swing.GroupLayout(domainPanel);
        domainPanel.setLayout(domainPanelLayout);
        domainPanelLayout.setHorizontalGroup(
            domainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(domainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(domainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(domainPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(domainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gradesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        domainPanelLayout.setVerticalGroup(
            domainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(domainPanelLayout.createSequentialGroup()
                .addGroup(domainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(domainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, domainPanelLayout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1))
                        .addComponent(gradesPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, Short.MAX_VALUE))
        );

        progressionPanel.setBackground(new java.awt.Color(122, 122, 122));
        progressionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        progressionPanel.setPreferredSize(new java.awt.Dimension(2290, 652));
        progressionPanel.setLayout(new java.awt.GridLayout(1, 0));

        pane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pane1.setContentType("text/html");
        jScrollPane2.setViewportView(pane1);

        progressionPanel.add(jScrollPane2);

        pane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pane2.setContentType("text/html");
        jScrollPane3.setViewportView(pane2);

        progressionPanel.add(jScrollPane3);

        pane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pane3.setContentType("text/html");
        jScrollPane4.setViewportView(pane3);

        progressionPanel.add(jScrollPane4);

        pane4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pane4.setContentType("text/html");
        jScrollPane5.setViewportView(pane4);

        progressionPanel.add(jScrollPane5);

        pane5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pane5.setContentType("text/html");
        jScrollPane6.setViewportView(pane5);

        progressionPanel.add(jScrollPane6);

        pane6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pane6.setContentType("text/html");
        jScrollPane7.setViewportView(pane6);

        progressionPanel.add(jScrollPane7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(domainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(progressionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(domainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        curObj = new Node(0, " ", " ");
        DefaultMutableTreeNode node = (DefaultMutableTreeNode)
                                        jTree1.getLastSelectedPathComponent();
        
        resetProgressions();
        if(node == null){objLbl.setText(null); return;};
        if (node.isLeaf()){
            curObj = (Node)node.getUserObject();
            int id = curObj.getID();
            String obj = curObj.getLabel();
            Progression progList;
            
            try{
                ProgressionMgr retProg = new ProgressionMgr();
                progList = retProg.retrieve(id);
                displayProgressions(progList);
                objLbl.setText("<html>"+obj+"</html>");
            }
            catch(Exception e){
              JOptionPane.showMessageDialog(null, "Exception Occured " + e);  
            }
        }
        else{objLbl.setText(null); curObj = null;}
    }//GEN-LAST:event_jTree1ValueChanged

    private void studentListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_studentListValueChanged
       
        curStu = (Student)((JList)evt.getSource()).getSelectedValue();
        resetProgressions();
        
        if(curStu == null){
            stuLbl.setText(null);
        }
        else{
            String name = curStu.toString();
            stuLbl.setText(name);
        }
    }//GEN-LAST:event_studentListValueChanged

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clearFields();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void notesFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_notesFieldKeyTyped
        int a = notesField.getText().length();
        cCountLbl.setText(a + "/120 characters");
    }//GEN-LAST:event_notesFieldKeyTyped

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        
        String g = gradeField.getText().trim();
        String notes = notesField.getText();
        Grade grade;
        
        if(this.curObj == null){
            JOptionPane.showMessageDialog(null, "Select an Objective");
        }
        else if(this.curStu == null){
            JOptionPane.showMessageDialog(null, "Select a Student");
        }
        else if(g.isEmpty() || !(g.matches("\\d+")) || !((Integer.parseInt(g) > 0) && (Integer.parseInt(g) < 14))){
            JOptionPane.showMessageDialog(null, "Progression must be value '1-13'");
        }
        else if(notes.length() > 120)
            JOptionPane.showMessageDialog(null, "Note field cannot exceed 120 characters");
        else{
            int id = this.curObj.getID();
            String stu = this.curStu.getID();
            
            
            try{
                grade = new Grade(id, stu, g, fDate, notes, semester);
                GradeMgr gradeMgr = new GradeMgr();
                Grade storedGrade;
                storedGrade = gradeMgr.storeGrade(grade);
                
                if(storedGrade.validate()){
                    notesField.setText(null);
                    gradeField.setText(null);
                    cCountLbl.setText("0/120 characters");
                    
                    int i = studentList.getSelectedIndex();
                    
                    if(i == studentList.getLastVisibleIndex())
                        studentList.setSelectedIndex(studentList.getFirstVisibleIndex());
                    else
                       studentList.setSelectedIndex(i+1); 
                    
                    JOptionPane.showMessageDialog(null, "Progression submitted");
                }
                
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null, "Progression not submitted");
                
            }
        } 
            
    }//GEN-LAST:event_submitBtnActionPerformed

    private void belowStdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_belowStdBtnActionPerformed
        if (curStu == null)
            JOptionPane.showMessageDialog(null, "You must select a student ");
        else if(this.searchSem == null)
            JOptionPane.showMessageDialog(null, "You must select a semester ");
        else{
            String name = stuLbl.getText();
            String id = curStu.getID();
            String sem = this.searchSem;
            try{
                Report r = new Report(name, id, sem);
                ReportMgr reportMgr = new ReportMgr();
                Report retReport;
                retReport = reportMgr.retBelow(r);
                
                if(retReport.validate()){
                
                    Window win = SwingUtilities.getWindowAncestor(this);
                    ReportResult diag = new ReportResult(win, true);
                    diag.setResultTable(retReport);
                    diag.setVisible(true);
                }
                else
                   JOptionPane.showMessageDialog(null, "No progressions submitted for this student"); 
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null, "Report failed" + e);
            }
        }
            
    }//GEN-LAST:event_belowStdBtnActionPerformed

    private void semesterComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semesterComboActionPerformed
        int i = semesterCombo.getSelectedIndex();
        if(i == 0)
            this.searchSem = "Fall";
        else if(i == 1)
            this.searchSem = "Winter";
        else if(i == 2)
            this.searchSem = "Spring";
        else
            this.searchSem = null;
                    
    }//GEN-LAST:event_semesterComboActionPerformed

    private void aboveStdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboveStdBtnActionPerformed
        if (curStu == null)
            JOptionPane.showMessageDialog(null, "You must select a student ");
        else if(this.searchSem == null)
            JOptionPane.showMessageDialog(null, "You must select a semester ");
        else{
            String name = stuLbl.getText();
            String id = curStu.getID();
            String sem = this.searchSem;
            try{
                Report r = new Report(name, id, sem);
                ReportMgr reportMgr = new ReportMgr();
                Report retReport;
                retReport = reportMgr.retAbove(r);
                
                if(retReport.validate()){
                
                    Window win = SwingUtilities.getWindowAncestor(this);
                    ReportResult diag = new ReportResult(win, true);
                    diag.setResultTable(retReport);
                    diag.setVisible(true);
                }
                else
                   JOptionPane.showMessageDialog(null, "No progressions submitted for this student"); 
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null, "Report failed" + e);
            }
        }
    }//GEN-LAST:event_aboveStdBtnActionPerformed

    private void allStdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStdBtnActionPerformed
        if (curStu == null)
            JOptionPane.showMessageDialog(null, "You must select a student ");
        else if(this.searchSem == null)
            JOptionPane.showMessageDialog(null, "You must select a semester ");
        else{
            String name = stuLbl.getText();
            String id = curStu.getID();
            String sem = this.searchSem;
            try{
                Report r = new Report(name, id, sem);
                ReportMgr reportMgr = new ReportMgr();
                Report retReport;
                retReport = reportMgr.retAll(r);
                
                System.out.println(retReport.getID() + "   " + retReport.getSemester());
                
                if(retReport.validate()){
                
                    Window win = SwingUtilities.getWindowAncestor(this);
                    ReportResult diag = new ReportResult(win, true);
                    diag.setResultTable(retReport);
                    diag.setVisible(true);
                }
                else
                   JOptionPane.showMessageDialog(null, "No progressions submitted for this student"); 
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null, "Report failed" + e);
            }
        }
    }//GEN-LAST:event_allStdBtnActionPerformed

    private void p1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p1MouseClicked
        gradeField.setText("1");
    }//GEN-LAST:event_p1MouseClicked

    private void p2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p2MouseClicked
        gradeField.setText("2");
    }//GEN-LAST:event_p2MouseClicked

    private void p3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p3MouseClicked
        gradeField.setText("3");
    }//GEN-LAST:event_p3MouseClicked

    private void p4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p4MouseClicked
        gradeField.setText("4");
    }//GEN-LAST:event_p4MouseClicked

    private void p5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p5MouseClicked
        gradeField.setText("5");
    }//GEN-LAST:event_p5MouseClicked

    private void p6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p6MouseClicked
        gradeField.setText("6");
    }//GEN-LAST:event_p6MouseClicked

    private void p7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p7MouseClicked
        gradeField.setText("7");
    }//GEN-LAST:event_p7MouseClicked

    private void p8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p8MouseClicked
        gradeField.setText("8");
    }//GEN-LAST:event_p8MouseClicked

    private void p9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p9MouseClicked
        gradeField.setText("9");
    }//GEN-LAST:event_p9MouseClicked

    private void p10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p10MouseClicked
        gradeField.setText("10");
    }//GEN-LAST:event_p10MouseClicked

    private void p11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p11MouseClicked
        gradeField.setText("11");
    }//GEN-LAST:event_p11MouseClicked

    private void p12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p12MouseClicked
        gradeField.setText("12");
    }//GEN-LAST:event_p12MouseClicked

    private void p13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p13MouseClicked
        gradeField.setText("13");
    }//GEN-LAST:event_p13MouseClicked

    private void prevGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevGradeActionPerformed
        if(this.curObj == null){
            JOptionPane.showMessageDialog(null, "Select an Objective");
        }
        else if(this.curStu == null){
            JOptionPane.showMessageDialog(null, "Select a Student");
        }
        else{
            ArrayList<Grade> prevGrades;
            int id = this.curObj.getID();
            String stu = this.curStu.getID();
            
            try{
                Grade grade = new Grade(id, stu, null, fDate, null, null);
                GradeMgr gradeMgr = new GradeMgr();
                prevGrades = new ArrayList<>();
                
                prevGrades.addAll(gradeMgr.retrieveGrade(grade));
                
                Iterator<Grade> i = prevGrades.iterator();
                while(i.hasNext()){
                    grade = i.next();
                    int index = Integer.parseInt(grade.getGrade());
                    
                    switch (index) {
                        case 1:
                            p1.setBackground(Color.RED);
                            break;
                        case 2:
                            p2.setBackground(Color.RED);
                            break;
                        case 3:
                            p3.setBackground(Color.RED);
                            break;
                        case 4:
                            p4.setBackground(Color.RED);
                            break;
                        case 5:
                            p5.setBackground(Color.RED);
                            break;
                        case 6:
                            p6.setBackground(Color.RED);
                            break;
                        case 7:
                            p7.setBackground(Color.RED);
                            break;
                        case 8:
                            p8.setBackground(Color.RED);
                            break;
                        case 9:
                            p9.setBackground(Color.RED);
                            break;
                        case 10:
                            p10.setBackground(Color.RED);
                            break;
                        case 11:
                            p11.setBackground(Color.RED);
                            break;
                        case 12:
                            p12.setBackground(Color.RED);
                            break;
                        case 13:
                            p13.setBackground(Color.RED);
                            break;
                        default:
                            break;
                    
                    }
                }
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null, "Error retrieving grade" + e);  
            }
        }
    }//GEN-LAST:event_prevGradeActionPerformed

    private void displayProgressions(Progression prog){
        ArrayList<String> list = prog.getProgList();
        pane1.setText(list.get(0));
        pane2.setText(list.get(1));
        pane3.setText(list.get(2));
        pane4.setText(list.get(3));
        pane5.setText(list.get(4));
        pane6.setText(list.get(5));
            
    }
    private void loadStudents(){
        try{
           DefaultListModelMgr dlmMgr = new DefaultListModelMgr();
           DefaultListModel temp;
           temp = dlmMgr.retrieveList();
           
           studentList.setModel(temp);
           studentList.setFixedCellHeight(35);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error loading student list " + e);
        }
    }
    
    private void loadDomains(){
        try{
            DefaultTreeModelMgr treeMgr = new DefaultTreeModelMgr();
            jTree1.setModel(treeMgr.retrieveTree());
            ImageIcon icon = null;
            if (icon == null) {
                DefaultTreeCellRenderer renderer = new DefaultTreeCellRenderer();
                renderer.setLeafIcon(icon);
                renderer.setClosedIcon(icon);
                renderer.setIcon(icon);
                renderer.setOpenIcon(icon);
                renderer.setDisabledIcon(icon);
                renderer.setTextSelectionColor(Color.white);
                renderer.setBackgroundSelectionColor(Color.darkGray);
                renderer.setBorderSelectionColor(Color.BLACK);
                jTree1.setCellRenderer(renderer);
                jTree1.setRowHeight(35);
                
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error Loading Learning Domains " + e);
        }
    }
    
    private void getCurDate(){
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd-yyyy");
        this.fDate = date.format(formatter);
        LocalDate paredDate = LocalDate.parse(fDate, formatter);
        dateLbl.setText(fDate);
    }
    private void getSemester(){
        LocalDate today = LocalDate.now();
        LocalDate fStart = LocalDate.of(2016, 8, 15);
        LocalDate fEnd = LocalDate.of(2016, 11, 15);
        LocalDate wEnd = LocalDate.of(2017, 2, 15);
        LocalDate sEnd = LocalDate.of(2017, 5, 15);
        
        if((today.isAfter(fStart)) && (today.isBefore(fEnd))){
            this.semester = "Fall";
        }
        else if((today.isAfter(fEnd)) && (today.isBefore(wEnd))){
            this.semester = "Winter";
        }
        else if((today.isAfter(wEnd)) && (today.isBefore(sEnd))){
            this.semester = "Spring";
        }
        else{
            this.semester = "Summer";
        }
    }
    private void clearFields(){
        jTree1.clearSelection();
        studentList.clearSelection();
        gradeField.setText(null);
        notesField.setText(null);
        cCountLbl.setText("0/120 characters");
        this.curObj = null;
        this.curStu = null;
        pane1.setText(null);
        pane2.setText(null);
        pane3.setText(null);
        pane4.setText(null);
        pane5.setText(null);
        pane6.setText(null);
        resetProgressions();
    }
    private void resetProgressions(){
        for(int i = 1; i < 14; i++){
            switch (i) {
                        case 1:
                            p1.setBackground(new Color(7, 136, 7));
                            break;
                        case 2:
                            p2.setBackground(new Color(7, 136, 7));
                            break;
                        case 3:
                            p3.setBackground(new Color(7, 136, 7));
                            break;
                        case 4:
                            p4.setBackground(new Color(7, 136, 7));
                            break;
                        case 5:
                            p5.setBackground(new Color(7, 136, 7));
                            break;
                        case 6:
                            p6.setBackground(new Color(7, 136, 7));
                            break;
                        case 7:
                            p7.setBackground(new Color(7, 136, 7));
                            break;
                        case 8:
                            p8.setBackground(new Color(7, 136, 7));
                            break;
                        case 9:
                            p9.setBackground(new Color(7, 136, 7));
                            break;
                        case 10:
                            p10.setBackground(new Color(7, 136, 7));
                            break;
                        case 11:
                            p11.setBackground(new Color(7, 136, 7));
                            break;
                        case 12:
                            p12.setBackground(new Color(7, 136, 7));
                            break;
                        case 13:
                            p13.setBackground(new Color(7, 136, 7));
                            break;
                        default:
                            break;
            }
        }
    }
    public static void main(String args[]) {
       
        java.awt.EventQueue.invokeLater(() -> {
            new assessmentUI().setVisible(true);
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboveStdBtn;
    private javax.swing.JButton allStdBtn;
    private javax.swing.JButton belowStdBtn;
    private javax.swing.JLabel cCountLbl;
    private javax.swing.JButton clearBtn;
    private javax.swing.JLabel dLbl;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JPanel domainPanel;
    private javax.swing.JTextField gradeField;
    private javax.swing.JPanel gradesPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextArea notesField;
    private javax.swing.JLabel objLbl;
    private javax.swing.JLabel p1;
    private javax.swing.JLabel p10;
    private javax.swing.JLabel p11;
    private javax.swing.JLabel p12;
    private javax.swing.JLabel p13;
    private javax.swing.JLabel p2;
    private javax.swing.JLabel p3;
    private javax.swing.JLabel p4;
    private javax.swing.JLabel p5;
    private javax.swing.JLabel p6;
    private javax.swing.JLabel p7;
    private javax.swing.JLabel p8;
    private javax.swing.JLabel p9;
    private javax.swing.JEditorPane pane1;
    private javax.swing.JEditorPane pane2;
    private javax.swing.JEditorPane pane3;
    private javax.swing.JEditorPane pane4;
    private javax.swing.JEditorPane pane5;
    private javax.swing.JEditorPane pane6;
    private javax.swing.JButton prevGrade;
    private javax.swing.JPanel progressionPanel;
    private javax.swing.JComboBox<String> semesterCombo;
    private javax.swing.JLabel stuLbl;
    private javax.swing.JList<String> studentList;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables

   
}
